import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import { Footer } from "@/components/footer";
import { Navbaradmin } from "@/components/navbaradmin";
import { Field, Form, Formik, FormikValues } from "formik";
import axios from "axios";
import { UserRole } from "@prisma/client";

export default function addOperator() {

  const addOperator = async(values: FormikValues, actions: any) => {
    console.log(values)
    const response = await axios.post("/api/auth/register",
      JSON.stringify(values),
			{
				headers: {
					Accept: "application/json",
					"Content-Type": "application/json"
				},
			}
		)
    console.log(response)
  }

  return (
    <>
      <Head>
        <title>Tambah Operator</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbaradmin />
      <aside
        id="logo-sidebar"
        className="fixed top-0 left-0 z-40 w-64 h-screen pt-20 transition-transform -translate-x-full bg-white border-r border-gray-200 sm:translate-x-0 dark:bg-gray-800 dark:border-gray-700"
        aria-label="Sidebar"
      >
        <div className="h-full px-3 pb-4 overflow-y-auto bg-white dark:bg-gray-800">
          <ul className="space-y-2">
            <li>
              <a
                href="#"
                className="flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700"
              >
                <svg
                  aria-hidden="true"
                  className="w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path d="M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z"></path>
                  <path d="M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z"></path>
                </svg>
                <span className="ml-3">Tambah Parkiran</span>
              </a>
            </li>
            <li>
              <a
                href="#"
                className="flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700"
              >
                <svg
                  aria-hidden="true"
                  className="w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path d="M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z"></path>
                  <path d="M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z"></path>
                </svg>
                <span className="ml-3">Tambah Operator</span>
              </a>
            </li>
          </ul>
        </div>
      </aside>
      <div className="p-4 sm:ml-64 bg-white">
        <div className="h-screen p-4  dark:border-gray-700 mt-14">
          <div className="h-full rounded-xl flex items-start mb-4 rounded bg-gray-300 ">
            <div className="flex flex-wrap w-full">
              <Formik
                initialValues={{ fullname: '', email: '', password: '', confirmation: '', parkingLotId: '', role: UserRole.operator }}
                validateOnChange={true}
                validateOnBlur={false}
                validate={
                  (values) => {
                    const errors: any = {}
                    if (!(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i).test(values.email)) {
                      errors.email = 'Invalid email'
                    }
                    if (values.password && values.password.length < 8) {
                      errors.password = 'Password is too short'
                      console.log(errors)
                    }

                    if (values.confirmation && values.password && values.password !== values.confirmation) {
                      errors.confirmation = 'Your confirmation password is not the same as before'
                      console.log(errors)
                    }
                  }
                }
                onSubmit={(values, actions) => {
                  console.log("Add new operator")
                  addOperator(values, actions)
                }}
              >
                {(props) => (
                  <Form className="w-full px-12">
                    <Field name="fullname">
                      {() => (
                        <div>
                          <div className="py-4 ">
                            <label className=" w-36 inline-block text-black text-left">
                              Nama Operator
                            </label>
                          </div>
                          <div>
                            <input
                              className="rounded-xl text-black w-80"
                              type="text"
                              name="fullname"
                              value={props.values.fullname}
                              onChange={props.handleChange}
                              placeholder="Nama Lengkap"
                            />
                          </div>
                        </div>
                      )}
                    </Field>
                    <Field name="email">
                      {() => (
                        <div>
                          <div className="py-4 ">
                            <label className=" w-36 inline-block text-black text-left">
                              Email
                            </label>
                          </div>
                          <div>
                            <input
                              className="rounded-xl text-black w-80"
                              type="text"
                              name="email"
                              value={props.values.email}
                              onChange={props.handleChange}
                              placeholder="Email"
                            />
                          </div>
                        </div>
                      )}
                    </Field>
                    <Field name="password">
                      {() => (
                        <div>
                          <div className="py-4 ">
                            <label className=" w-36 inline-block text-black text-left">
                              Sandi
                            </label>
                          </div>
                          <div>
                            <input
                              className="rounded-xl text-black w-80"
                              type="password"
                              name="password"
                              value={props.values.password}
                              onChange={props.handleChange}
                              placeholder="Sandi"
                            />
                          </div>
                        </div>
                      )}
                    </Field>
                    <Field name="confirmation">
                      {() => (
                        <div>
                          <div className="py-4 ">
                            <label className=" w-36 inline-block text-black text-left">
                              Konfirmasi Sandi
                            </label>
                          </div>
                          <div>
                            <input
                              className="rounded-xl text-black w-80"
                              type="password"
                              name="confirmation"
                              value={props.values.confirmation}
                              onChange={props.handleChange}
                              placeholder="Konfirmasi"
                            />
                          </div>
                        </div>
                      )}
                    </Field>
                    <Field>
                      {() => (
                        <div>
                          <div className="py-4 ">
                            <label className=" w-36 inline-block text-black text-left">
                              Parkiran
                            </label>
                          </div>
                          <div>
                            <select
                              className="rounded-xl text-black w-80"
                              placeholder="Nama Operator"
                            />
                          </div>
                        </div>
                      )}
                    </Field>
                    <div className="block py-4 ">
                      <button type="submit" className="bg-blue-900 rounded-xl font-bold text-center w-44 h-12">
                        TAMBAH
                      </button>
                    </div>
                  </Form>
                )}
              </Formik>
              <form className="w-full px-12 ">


              </form>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
